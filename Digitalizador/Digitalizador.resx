<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ACYi/wZ9v14K02y1vgAAAABJRU5ErkJggg==
</value>
  </data>
</root>